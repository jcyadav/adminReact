[{"D:\\react-projects\\adminReact\\src\\index.js":"1","D:\\react-projects\\adminReact\\src\\App.js":"2","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddProduct\\CreateProduct.js":"3","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddProduct\\AddProduct.js":"4","D:\\react-projects\\adminReact\\src\\Components\\utils\\ProtectedRoute.jsx":"5","D:\\react-projects\\adminReact\\src\\Components\\Home\\Home.jsx":"6","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCategory\\CreateCategory.jsx":"7","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCollection\\CreateCollection.jsx":"8","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\EmailVerify.jsx":"9","D:\\react-projects\\adminReact\\src\\Components\\Pages\\Coupon\\AddCoupon.jsx":"10","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\Resetpassword.jsx":"11","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCollection\\AddCollection.jsx":"12","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCategory\\AddCategory.jsx":"13","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\AdminLogin.jsx":"14","D:\\react-projects\\adminReact\\src\\Components\\Pages\\Coupon\\CreateCoupon.jsx":"15","D:\\react-projects\\adminReact\\src\\Components\\Pages\\User\\index.jsx":"16","D:\\react-projects\\adminReact\\src\\Components\\utils\\Validation.jsx":"17","D:\\react-projects\\adminReact\\src\\Components\\Loder\\Loder.jsx":"18","D:\\react-projects\\adminReact\\src\\Common\\Hoc.jsx":"19","D:\\react-projects\\adminReact\\src\\Components\\utils\\index.jsx":"20","D:\\react-projects\\adminReact\\src\\Common\\Header\\Header.jsx":"21","D:\\react-projects\\adminReact\\src\\Components\\Sidebar\\Sidebar.jsx":"22"},{"size":640,"mtime":1655358466002,"results":"23","hashOfConfig":"24"},{"size":2199,"mtime":1664512732126,"results":"25","hashOfConfig":"24"},{"size":11349,"mtime":1655358465997,"results":"26","hashOfConfig":"24"},{"size":14525,"mtime":1655358465997,"results":"27","hashOfConfig":"24"},{"size":486,"mtime":1655358466001,"results":"28","hashOfConfig":"24"},{"size":1773,"mtime":1664353973335,"results":"29","hashOfConfig":"24"},{"size":6218,"mtime":1655358465995,"results":"30","hashOfConfig":"24"},{"size":7621,"mtime":1655358465996,"results":"31","hashOfConfig":"24"},{"size":2399,"mtime":1655358465992,"results":"32","hashOfConfig":"24"},{"size":10273,"mtime":1655358465999,"results":"33","hashOfConfig":"24"},{"size":3071,"mtime":1655358465992,"results":"34","hashOfConfig":"24"},{"size":7150,"mtime":1655358465996,"results":"35","hashOfConfig":"24"},{"size":10010,"mtime":1655358465995,"results":"36","hashOfConfig":"24"},{"size":2934,"mtime":1655369841738,"results":"37","hashOfConfig":"24"},{"size":7204,"mtime":1655358465999,"results":"38","hashOfConfig":"24"},{"size":8246,"mtime":1655358466000,"results":"39","hashOfConfig":"24"},{"size":895,"mtime":1655358466001,"results":"40","hashOfConfig":"24"},{"size":626,"mtime":1655358465994,"results":"41","hashOfConfig":"24"},{"size":652,"mtime":1664353987751,"results":"42","hashOfConfig":"24"},{"size":103,"mtime":1655373012669,"results":"43","hashOfConfig":"24"},{"size":5970,"mtime":1655358465985,"results":"44","hashOfConfig":"24"},{"size":1198,"mtime":1655358466000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"gpw5eo",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"48"},"D:\\react-projects\\adminReact\\src\\index.js",[],["107","108"],"D:\\react-projects\\adminReact\\src\\App.js",["109","110"],"import { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"../src/Components/Home/Home\";\r\nimport AdminLogin from \"./Components/AdminLogin/AdminLogin\";\r\nimport EmailVerify from \"./Components/AdminLogin/EmailVerify\";\r\nimport Resetpassword from \"./Components/AdminLogin/Resetpassword\";\r\n\r\n\r\n//for notification\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport ProtectedRoute from \"./Components/utils/ProtectedRoute\";\r\nimport AddCategory from \"./Components/Pages/AddCategory/AddCategory\";\r\nimport CreateCategory from \"./Components/Pages/AddCategory/CreateCategory\";\r\nimport User from \"./Components/Pages/User\";\r\nimport AddCollection from \"./Components/Pages/AddCollection/AddCollection\";\r\nimport CreateCollection from \"./Components/Pages/AddCollection/CreateCollection\";\r\nimport AddProduct from \"./Components/Pages/AddProduct/AddProduct\";\r\nimport CreateProduct from \"./Components/Pages/AddProduct/CreateProduct\";\r\nimport AddCoupon from \"./Components/Pages/Coupon/AddCoupon\";\r\nimport CreateCoupon from \"./Components/Pages/Coupon/CreateCoupon\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ReactNotification />\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/\" component={AdminLogin} />\r\n        <Route exact path=\"/emailverify\" component={EmailVerify} />\r\n        <Route exact path=\"/resetpassword\" component={Resetpassword} />\r\n        <Route exact path=\"/user\" component={User} />\r\n        <Route exact path=\"/category\" component={AddCategory} />\r\n        <Route exact path=\"/createcategory\" component={CreateCategory} />\r\n        <Route exact path=\"/collection\" component={AddCollection} />\r\n        <Route exact path=\"/createcollection\" component={CreateCollection} />\r\n        <Route exact path=\"/addproduct\" component={AddProduct} />\r\n        <Route exact path=\"/createproduct\" component={CreateProduct} />\r\n        <Route exact path=\"/coupon\" component={AddCoupon} />\r\n        <Route exact path=\"/createcoupon\" component={CreateCoupon}/>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddProduct\\CreateProduct.js",["111","112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateProduct = (props) => {\r\n    const [isloading, setisloading] = useState(false);\r\n    const [isupdated, setisupdated] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [CollectionDataArry, setCollectionDataArry] = useState([]);\r\n    const [image, setimage] = useState();\r\n    const [collection, setCollection] = useState();\r\n    //error\r\n    const [EditName, setEditName] = useState(false);\r\n    const [EditPrice, setEditPrice] = useState(false);\r\n    const [Editimage, setEditimage] = useState(false);\r\n    const [EditCollection, setEditCollection] = useState(false);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        let url = getBaseUrl() + \"collection\";\r\n\r\n        axios\r\n            .get(url)\r\n            .then(\r\n                (res) => {\r\n                    console.log(\"data collection:::\", res);\r\n                    setCollectionDataArry(res.data.collections);\r\n                },\r\n\r\n                (error) => {\r\n                    setisloading(false);\r\n                    console.log(\"data response error:::\", error);\r\n                }\r\n            )\r\n            .catch((e) => {\r\n                setisloading(false);\r\n                console.log(\"data response error:::\", e);\r\n            });\r\n    },[isupdated]);\r\n\r\n    //add Product\r\n\r\n    const addProduct = () => {\r\n        try {\r\n            if (!blankValidator(name)) {\r\n                setEditName(true);\r\n                return;\r\n            }\r\n\r\n            if (!blankValidator(price)) {\r\n                setEditPrice(true);\r\n                return;\r\n            }\r\n\r\n\r\n            if (!blankValidator(image)) {\r\n                setEditimage(true);\r\n                return;\r\n            }\r\n            if (!blankValidator(collection)) {\r\n                setEditCollection(true);\r\n                return;\r\n            }\r\n\r\n            let url = getBaseUrl() + \"product\";\r\n            setisloading(true);\r\n\r\n            const fd = new FormData();\r\n            fd.append(\"name\", name);\r\n            fd.append(\"image\", image);\r\n            fd.append(\"original_price\", price);\r\n            fd.append(\"product_collection\", collection);\r\n\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            };\r\n\r\n            axios\r\n                .post(url, fd, config)\r\n                .then(\r\n                    (res) => {\r\n                        console.log(\"data Product:::\", res);\r\n                        setisloading(false);\r\n                        showNotificationMsz(res.data.msg, \"success\");\r\n                    },\r\n\r\n                    (error) => {\r\n                        setisloading(false);\r\n                        console.log(\"data response error:::\", error);\r\n                        showNotificationMsz(error, \"danger\");\r\n                    }\r\n                )\r\n                .catch((e) => {\r\n                    setisloading(false);\r\n                    console.log(\"data response error:::\", e);\r\n                    showNotificationMsz(e, \"danger\");\r\n                });\r\n        } catch (error) { }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ width: \"100%\" }}>\r\n                <div className=\"home_padding\">\r\n                    <div className=\"content_padding\">\r\n                        <Grid className=\"Component_main_grid p-2 \"></Grid>\r\n\r\n                        <div>\r\n                            <Card className=\" mb-2 Card_shadow p-3\">\r\n                                <div className=\"card_admissiondetails_height\">\r\n                                    <div className=\"textfiled_margin\">\r\n                                        <div className=\"card_content_instition\">\r\n                                            <h5 className=\"text_filed_heading\">Add Product</h5>\r\n\r\n                                            <Grid className=\"Component_main_grid\">\r\n                                                <Grid item md={12}>\r\n                                                    <div className=\"text_filed_heading\">Product Name</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Name\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={name}\r\n                                                            onChange={(e) => {\r\n                                                                setEditName(false);\r\n                                                                setName(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        {EditName && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Enter Product Name\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"text_filed_heading\">Price</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Price\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={price}\r\n                                                            onChange={(e) => {\r\n                                                                setEditPrice(false);\r\n                                                                setPrice(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        {EditPrice && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Enter Price\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"text_filed_heading\">Image</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Subject Name\"\r\n                                                            autoComplete=\"off\"\r\n                                                            onChange={(e) => {\r\n                                                                setimage(e.target.files[0]);\r\n                                                            }}\r\n                                                        />\r\n\r\n                                                        {Editimage && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Select Image\r\n                                                            </span>\r\n                                                        )}\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"text_filed_heading\">Collection</div>\r\n                                                    <select\r\n                                                        className=\"form-control mb-3\"\r\n                                                        value={collection}\r\n                                                        onChange={(e) => {\r\n                                                            setCollection(e.target.value)\r\n                                                            setEditCollection(false);\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"\">Select Collection</option>\r\n                                                        {CollectionDataArry.map((row, index) => (\r\n                                                            <option value={row._id}>\r\n                                                                {row.name}\r\n                                                            </option>\r\n                                                        ))}\r\n\r\n                                                        {EditCollection && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Choose Collection\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </select>{\" \"}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <div className=\"mt-2 pb-3 \">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                className=\"button_formatting\"\r\n                                                onClick={addProduct}\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HOC(CreateProduct);\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddProduct\\AddProduct.js",["114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\n//pagination\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\n//DIALOG BOX\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction AddProduct(props) {\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [isloading, setisloading] = useState(false);\r\n  const [CategoryDataArry, setCategoryDataArry] = useState([]);\r\n  const [EditDailogOpen, setEditDailogOpen] = useState(\"\");\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Edit Product\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [CollectionDataArry, setCollectionDataArry] = useState([]);\r\n  const [collection, setCollection] = useState();\r\n  const [EditId, setEditId] = useState(\"\");\r\n\r\n  const EditProduct = (row) => {\r\n    setEditDailogOpen(!EditDailogOpen);\r\n  \r\n    setName(row.name);\r\n    setPrice(row.original_price);\r\n    // collection(row.product_collection);\r\n    setEditId(row._id);\r\n  \r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"product\";\r\n    setisloading(true);\r\n\r\n    axios\r\n      .get(url)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data viewProduct:::\", res);\r\n          setisloading(false);\r\n          setCategoryDataArry(res.data.products);\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n      });\r\n  }, [isupdated]);\r\n\r\n  ///delete Category Name\r\n  const deleteProduct= (row) => {\r\n    let id = row._id;\r\n    setisloading(false);\r\n    let url = getBaseUrl() + \"product\";\r\n\r\n    const temp ={\r\n      productId:id\r\n    }\r\n\r\n    const config = {\r\n      headers: { \r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n       },\r\n      data: JSON.stringify(temp)\r\n  };\r\n    axios\r\n      .delete(url,config)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisupdated(!isupdated);\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n          setisloading(false);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n          setisloading(false);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n        setisloading(false);\r\n      });\r\n  };\r\n\r\n  // collection \r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"collection\";\r\n\r\n    axios\r\n        .get(url)\r\n        .then(\r\n            (res) => {\r\n                console.log(\"data collection:::\", res);\r\n                setCollectionDataArry(res.data.collections);\r\n            },\r\n\r\n            (error) => {\r\n                setisloading(false);\r\n                console.log(\"data response error:::\", error);\r\n            }\r\n        )\r\n        .catch((e) => {\r\n            setisloading(false);\r\n            console.log(\"data response error:::\", e);\r\n        });\r\n},[isupdated]);\r\n\r\n  ///update Product\r\n  const UpdateProduct = (ID) => {\r\n    let id = ID;\r\n    setisloading(true);\r\n    let url = getBaseUrl() + \"product\";\r\n\r\n    const fd = new FormData();\r\n    fd.append(\"productId\",id)\r\n    fd.append(\"name\", name);\r\n    fd.append(\"original_price\", price);\r\n    fd.append(\"product_collection\", collection);\r\n    // console.log(\"temp::>>>\",temp);?\r\n    const config = {\r\n      headers: { \r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n       },\r\n      data: JSON.stringify(fd)\r\n  };\r\n    axios\r\n      .put(url, fd,config)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisupdated(!isupdated);\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n          setEditDailogOpen(!EditDailogOpen);\r\n          setisloading(false);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n          setisloading(false);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n        setisloading(false);\r\n      });\r\n  };\r\n\r\n\r\n  // for pagination hadler\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    window.scrollTo(0, 0);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const [titlename, settitlename] = useState(\"\");\r\n  const filterData = CategoryDataArry.filter((event) => {\r\n    return (\r\n      event.name.toLowerCase().indexOf(titlename.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home_padding\">    \r\n        <div className=\"content_padding\">\r\n          <Grid className=\"Component_main_grid mb-3\">\r\n            <Grid item md={9}>\r\n              <h3 className=\"mb-2\">Product</h3>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.push(\"/createproduct\")}\r\n              >\r\n                <i class=\"fa fa-plus\"></i> Create\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.goBack()}\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>Go Back\r\n              </button>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div className=\"d-flex mt-3\">\r\n                <span className=\"p-2\">\r\n                  <i class=\"fa fa-search\"></i>\r\n                </span>\r\n                <span>\r\n                  <input\r\n                    value={titlename}\r\n                    onChange={(e) => {\r\n                      settitlename(e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Search by Name\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Card classname=\"main_card p-3\">\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Image</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Discount</TableCell>\r\n                    <TableCell>Discount Percentage</TableCell>\r\n                    <TableCell>Operations</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(rowsPerPage > 0\r\n                    ? filterData.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                    : filterData\r\n                  ).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                       <TableCell component=\"th\" scope=\"row\">\r\n                        <img\r\n                          src={ row.images}\r\n                          style={{ height: \"30px\", width: \"50px\" }}\r\n                        />\r\n                        </TableCell>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>{row.discount}</TableCell>\r\n                      <TableCell>{row.discount_percentage}</TableCell>\r\n                      \r\n\r\n                      <TableCell>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info mr-4\"\r\n                          onClick={() => EditProduct(row)}\r\n                        >\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info\"\r\n                          onClick={() => deleteProduct(row)}\r\n                        >\r\n                          <i class=\"fa fa-trash\"></i>\r\n                        </button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                true\r\n                rowsPerPageOptions={false}\r\n                component=\"div\"\r\n                count={filterData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Card>\r\n\r\n            <br />\r\n          <Dialog\r\n            open={EditDailogOpen}\r\n            onClose={() => setEditDailogOpen(!EditDailogOpen)}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth=\"sm\"\r\n            fullWidth=\"fullWidth\"\r\n          >\r\n            <DialogTitle>\r\n              Update Product\r\n              <span className=\"float-right icon_color\"></span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n            <div className=\"text_filed_heading\">Product Name</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Name\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={name}\r\n                                                            onChange={(e) => {\r\n                                                             \r\n                                                                setName(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                     \r\n                                                    </div>\r\n\r\n                                                    <div className=\"text_filed_heading\">Price</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Price\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={price}\r\n                                                            onChange={(e) => {\r\n                                                                \r\n                                                                setPrice(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                       \r\n                                                    </div>\r\n\r\n                                                 \r\n\r\n                                                    <div className=\"text_filed_heading\">Collection</div>\r\n                                                    <select\r\n                                                        className=\"form-control mb-3\"\r\n                                                        value={collection}\r\n                                                        onChange={(e) => {\r\n                                                            setCollection(e.target.value)\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"\">Select Collection</option>\r\n                                                        {CollectionDataArry.map((row, index) => (\r\n                                                            <option value={row._id}>\r\n                                                                {row.name}\r\n                                                            </option>\r\n                                                        ))}\r\n\r\n                                                       \r\n                                                    </select>{\" \"}\r\n\r\n\r\n\r\n\r\n\r\n                  </DialogContent>\r\n                <DialogActions>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => EditProduct(!EditDailogOpen)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => UpdateProduct(EditId)}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </>\r\n  );\r\n}\r\nexport default HOC(AddProduct);\r\n","D:\\react-projects\\adminReact\\src\\Components\\utils\\ProtectedRoute.jsx",[],"D:\\react-projects\\adminReact\\src\\Components\\Home\\Home.jsx",["119"],"import React, { useEffect } from \"react\";\r\nimport HOC from \"../../Common/Hoc\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\n\r\nimport \"./Home.css\";\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  //local array\r\n  const home = [\r\n    // { show: \"Orders\", link: \"orders\", data: \"20\" },\r\n\r\n    // { show: \"Customers \", link: \"customers\", data: \"160\" },\r\n    { show: \"User\", link: \"user\" },\r\n    { show: \"Collection\", link: \"collection\" },\r\n    { show: \"Category\", link: \"category\" },\r\n    { show: \"Product\", link: \"addproduct\" },\r\n    { show: \"Coupon\", link: \"coupon\" },\r\n    \r\n  ];\r\n  return (\r\n    <div className=\"home_padding\">\r\n      <div className=\"content_padding_home\">\r\n        <div className=\"main_div \">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {home.map((item, index) => (\r\n                <div className=\"col-md-4  col-lg-4\">\r\n                  <Card\r\n                    className=\"main_card Card_shadow \"\r\n                    onClick={() => props.history.push(`${item.link}`)}\r\n                  >\r\n                    <div className=\"main_content d-flex justify-content-between\">\r\n                      <p>\r\n                        <span className=\"\">\r\n                          <i class=\"fa fa-plus pr-1\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                        {item.show}\r\n                      </p>\r\n                      <span className=\"\">{item.data}</span>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(HOC(Home));\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCategory\\CreateCategory.jsx",["120","121","122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateCategory = (props) => {\r\n  const [isloading, setisloading] = useState(false);\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [categoryName, setcategoryName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image,setimage] =useState();\r\n  //error\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const [Editdescription, setEditdescription] = useState(false);\r\n  const [Editimage, setEditimage] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  //add category\r\n\r\n  const addCategory = () => {\r\n    try {\r\n      if (!blankValidator(categoryName)) {\r\n        setEditcategoryName(true);\r\n        return;\r\n      }\r\n\r\n      if (!blankValidator(description)) {\r\n        setEditdescription(true);\r\n        return;\r\n      }\r\n\r\n      if (!blankValidator(image)) {\r\n        setEditimage(true);\r\n        return;\r\n      }\r\n      let url = getBaseUrl() + \"category\";\r\n      setisloading(true);\r\n\r\n      const fd = new FormData();\r\n      fd.append(\"name\", categoryName);\r\n      fd.append(\"image\", image);\r\n      fd.append(\"description\" ,description);\r\n\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n      axios\r\n        .post(url, fd,config)\r\n        .then(\r\n          (res) => {\r\n            console.log(\"data Category:::\", res);\r\n            setisloading(false);\r\n            showNotificationMsz(res.data.msg, \"success\");\r\n          },\r\n\r\n          (error) => {\r\n            setisloading(false);\r\n            console.log(\"data response error:::\", error);\r\n            showNotificationMsz(error, \"danger\");\r\n          }\r\n        )\r\n        .catch((e) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", e);\r\n          showNotificationMsz(e, \"danger\");\r\n        });\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"home_padding\">\r\n          <div className=\"content_padding\">\r\n            <Grid className=\"Component_main_grid p-2 \"></Grid>\r\n\r\n            <div>\r\n              <Card className=\" mb-2 Card_shadow p-3\">\r\n                <div className=\"card_admissiondetails_height\">\r\n                  <div className=\"textfiled_margin\">\r\n                    <div className=\"card_content_instition\">\r\n                      <h5 className=\"text_filed_heading\">Add Category</h5>\r\n\r\n                      <Grid className=\"Component_main_grid\">\r\n                        <Grid item md={12}>\r\n                          <div className=\"text_filed_heading\">Category Name</div>\r\n                          <div className=\" mt-1 mr-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control \"\r\n                              placeholder=\"Enter Category\"\r\n                              autoComplete=\"off\"\r\n                              value={categoryName}\r\n                              onChange={(e) => {\r\n                                setEditcategoryName(false);\r\n                                setcategoryName(e.target.value);\r\n                              }}\r\n                            />\r\n                            {EditcategoryName && (\r\n                              <span className=\"text-danger\">\r\n                                Enter Category\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"text_filed_heading\">Description</div>\r\n                          <div className=\" mt-1 mr-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control \"\r\n                              placeholder=\"Enter Category\"\r\n                              autoComplete=\"off\"\r\n                              value={description}\r\n                              onChange={(e) => {\r\n                                setEditdescription(false);\r\n                                setDescription(e.target.value);\r\n                              }}\r\n                            />\r\n                            {Editdescription && (\r\n                              <span className=\"text-danger\">\r\n                                Enter Description \r\n                              </span>\r\n                            )}\r\n                          </div>\r\n\r\n                          \r\n                  <div className=\"text_filed_heading\">Image</div>\r\n                  <div className=\" mt-1 mr-2\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control \"\r\n                      placeholder=\"Enter Subject Name\"\r\n                      autoComplete=\"off\"\r\n                      onChange={(e) => {\r\n                        setimage(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                    \r\n                    {Editimage && (\r\n                              <span className=\"text-danger\">\r\n                                Select Image \r\n                              </span>\r\n                            )}\r\n\r\n                  </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                    <div className=\"mt-2 pb-3 \">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"button_formatting\"\r\n                        onClick={addCategory}\r\n                      >\r\n                        Create\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HOC(CreateCategory);\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCollection\\CreateCollection.jsx",["124","125"],"import React, { useEffect, useState } from \"react\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateCollection = (props) => {\r\n  const [isloading, setisloading] = useState(false);\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [CategoryDataArry, setCategoryDataArry] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setimage] = useState(\"\");\r\n\r\n  //error\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const [EditName, setEditName] = useState(false);\r\n  const [Editdescription, setEditdescription] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  //add category\r\n  const AddCollection = () => {\r\n    try {\r\n      if (!blankValidator(category)) {\r\n        setEditcategoryName(true);\r\n        return;\r\n      }\r\n      if (!blankValidator(name)) {\r\n        setEditName(true);\r\n        return;\r\n      }\r\n\r\n      if (!blankValidator(description)) {\r\n        setEditdescription(true);\r\n        return;\r\n      }\r\n\r\n      let url = getBaseUrl() + \"collection\";\r\n      setisloading(true);\r\n\r\n    \r\n\r\n    const fd = new FormData();\r\n    fd.append(\"name\", name);\r\n    fd.append(\"category\", category);\r\n    fd.append(\"description\" ,description);\r\n\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n      axios\r\n        .post(url, fd,config)\r\n        .then(\r\n          (res) => {\r\n            console.log(\"data Collection:::\", res);\r\n            setisloading(false);\r\n            showNotificationMsz(res.data.msg, \"success\");\r\n          },\r\n\r\n          (error) => {\r\n            setisloading(false);\r\n            console.log(\"data response error:::\", error);\r\n            showNotificationMsz(error, \"danger\");\r\n          }\r\n        )\r\n        .catch((e) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", e);\r\n          showNotificationMsz(e, \"danger\");\r\n        });\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"category\";\r\n\r\n    axios\r\n      .get(url)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data viewCategory:::\", res);\r\n\r\n          setCategoryDataArry(res.data.categories);\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n      });\r\n  }, [isupdated]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\" }}>\r\n        <div className=\"home_padding\">\r\n          <div className=\"content_padding\">\r\n            <Grid className=\"Component_main_grid p-2 \"></Grid>\r\n\r\n            <div>\r\n              <Card className=\" mb-2 Card_shadow p-3\">\r\n                <div className=\"card_admissiondetails_height\">\r\n                  <div className=\"textfiled_margin\">\r\n                    <div className=\"card_content_instition\">\r\n                      <h5 className=\"text_filed_heading\">Add Collection</h5>\r\n\r\n                      <Grid className=\"Component_main_grid\">\r\n                        <Grid item md={12}>\r\n                          <div className=\"text_filed_heading\">Name</div>\r\n                          <div className=\" mt-1 mr-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control \"\r\n                              placeholder=\"Enter Name\"\r\n                              autoComplete=\"off\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setEditName(false);\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                            {EditName && (\r\n                              <span className=\"text-danger\">\r\n                                Enter Name\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"text_filed_heading\">Category</div>\r\n                      <select \r\n                      className=\"form-control mb-3\"\r\n                      value={category}\r\n                      onChange={(e) =>{\r\n                        setCategory(e.target.value)\r\n                        setEditcategoryName(false);\r\n                      }}\r\n                      >\r\n                       <option value=\"\">Select Category</option>\r\n                       {CategoryDataArry.map((row, index) => (\r\n                              <option value={row._id}>\r\n                                {row.name}\r\n                              </option>\r\n                            ))}\r\n\r\n                      {EditcategoryName && (\r\n                              <span className=\"text-danger\">\r\n                                Enter Category\r\n                              </span>\r\n                            )}\r\n                 </select>{\" \"}\r\n\r\n                          \r\n                          <div className=\"text_filed_heading\">Descrption</div>\r\n                          <div className=\" mt-1 mr-2\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control \"\r\n                              placeholder=\"Enter Descrption\"\r\n                              autoComplete=\"off\"\r\n                              value={description}\r\n                              onChange={(e) => {\r\n                                setEditdescription(false);\r\n                                setDescription(e.target.value);\r\n                              }}\r\n                            />  \r\n                            {Editdescription && (\r\n                              <span className=\"text-danger\">\r\n                                Enter Description \r\n                              </span>\r\n                            )}\r\n                          </div>\r\n\r\n                          <div className=\"text_filed_heading\">Image</div>\r\n                  <div className=\" mt-1 mr-2\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control \"\r\n                      placeholder=\"Enter Subject Name\"\r\n                      autoComplete=\"off\"\r\n                      onChange={(e) => {\r\n                        setimage(e.target.files[0]);\r\n                      }}\r\n                    />\r\n                   \r\n\r\n                  </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                    <div className=\"mt-2 pb-3 \">\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        className=\"button_formatting\"\r\n                        onClick={AddCollection}\r\n                      >\r\n                        Create\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HOC(CreateCollection);\r\n","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\EmailVerify.jsx",["126"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Card, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Loder from \"../Loder/Loder\";\r\nimport { getBaseUrl } from \"../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../utils/Validation\";\r\n\r\n//import css\r\nimport \"./AdminLogin.css\";\r\nconst EmailVerify = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const [isloading, setisloading] = useState(false);\r\n  const [email, setemail] = useState(\"\");\r\n\r\n  const Userverify = () => {\r\n    let url = getBaseUrl() + \"admin/forgot-password\";\r\n    setisloading(true);\r\n\r\n    let temp = {\r\n      email,\r\n    };\r\n    axios\r\n      .post(url, temp)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisloading(false);\r\n          props.history.push(\"/resetpassword\", { email: email });\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"admin_card\">\r\n        <h5 className=\"font_change ml-2 mb-4\">\r\n          <i class=\"fa fa-lock\"></i> Please enter your E-mail.\r\n        </h5>\r\n        <Card className=\"card_shadow\">\r\n          <TextField\r\n            id=\"standard-password-input\"\r\n            className=\"email_field m-3\"\r\n            label=\"Email Id\"\r\n            type=\"text\"\r\n            autoComplete=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setemail(e.target.value);\r\n            }}\r\n          />\r\n          <br />\r\n\r\n          {/* <span className=\"forgot_pass ml-3\">Forgotten Password</span> */}\r\n          <br />\r\n          <span className=\"text-center mt-2\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"login_btn text-centre ml-2 mt-2 mb-3 mt-3\"\r\n              onClick={Userverify}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </span>\r\n        </Card>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailVerify;\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\Coupon\\AddCoupon.jsx",["127","128","129","130","131","132"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\n//pagination\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\n//DIALOG BOX\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction AddCoupon(props) {\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [isloading, setisloading] = useState(false);\r\n  const [CategoryDataArry, setCategoryDataArry] = useState([]);\r\n  const [EditDailogOpen, setEditDailogOpen] = useState(\"\");\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const [EditId, setEditId] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"coupon/all\";\r\n    setisloading(true);\r\n    const config = {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    axios\r\n      .get(url,config)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data viewCoupon:::\", res);\r\n          setisloading(false);\r\n          setCategoryDataArry(res.data.coupons);\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n      });\r\n  }, [isupdated]);\r\n\r\n   ///delete\r\n   const deleteProduct = (row) => {\r\n    let id = row._id;\r\n    let url = getBaseUrl() + \"product\"\r\n    const temp ={\r\n      productId:id\r\n    }\r\n    // console.log(\"temp::>>>\",temp);\r\n    const config = {\r\n      headers: { \r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n       },\r\n      data: JSON.stringify(temp)\r\n  };\r\n\r\n// console.log(\"config::>>\",config);\r\n    axios\r\n      .delete(url,config)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisupdated(!isupdated); \r\n        },\r\n\r\n        (error) => {\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n      });\r\n  };\r\n\r\n\r\n//   ///update Category Name\r\n//   const UpdateBrand = (ID) => {\r\n//     let id = ID;\r\n//     setisloading(true);\r\n//     let url = getBaseUrl() + `updateCategory/${id}`;\r\n//     let temp = {\r\n//       categoryName: EditcategoryName,\r\n//     };\r\n\r\n//     axios\r\n//       .patch(url, temp)\r\n//       .then(\r\n//         (res) => {\r\n//           console.log(\"data response:::\", res);\r\n//           setisupdated(!isupdated);\r\n//           showNotificationMsz(res.data.msg, \"success\");\r\n//           setEditDailogOpen(!EditDailogOpen);\r\n//           setisloading(false);\r\n//         },\r\n\r\n//         (error) => {\r\n//           console.log(\"data response error:::\", error);\r\n//           showNotificationMsz(error, \"danger\");\r\n//           setisloading(false);\r\n//         }\r\n//       )\r\n//       .catch((e) => {\r\n//         console.log(\"data response error:::\", e);\r\n//         showNotificationMsz(e, \"danger\");\r\n//         setisloading(false);\r\n//       });\r\n//   };\r\n\r\n//   //paginaton\r\n\r\n//   const UpdateCategoryData = (row) => {\r\n//     setEditDailogOpen(!EditDailogOpen);\r\n//     setEditcategoryName(row.categoryName);\r\n//     setEditId(row._id);\r\n//   };\r\n\r\n  // for pagination hadler\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(3);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    window.scrollTo(0, 0);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const [titlename, settitlename] = useState(\"\");\r\n\r\n  const filterData = CategoryDataArry.filter((event) => {\r\n    return (\r\n      event.code.toLowerCase().indexOf(titlename.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home_padding\">    \r\n        <div className=\"content_padding\">\r\n          <Grid className=\"Component_main_grid mb-3\">\r\n            <Grid item md={9}>\r\n              <h3 className=\"mb-2\">Add Coupon</h3>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.push(\"/createcoupon\")}\r\n              >\r\n                <i class=\"fa fa-plus\"></i> Create\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.goBack()}\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>Go Back\r\n              </button>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div className=\"d-flex mt-3\">\r\n                <span className=\"p-2\">\r\n                  <i class=\"fa fa-search\"></i>\r\n                </span>\r\n                <span>\r\n                  <input\r\n                    value={titlename}\r\n                    onChange={(e) => {\r\n                      settitlename(e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Search by Name\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Card classname=\"main_card p-3\">\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Code</TableCell>\r\n                    <TableCell>Discount</TableCell>\r\n                    <TableCell>Expiry Date</TableCell>\r\n                    <TableCell>Operations</TableCell>\r\n                   \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(rowsPerPage > 0\r\n                    ? filterData.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                    : filterData\r\n                  ).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                      \r\n                      <TableCell>{row.code}</TableCell>\r\n                      <TableCell>{row.discount_percentage}</TableCell>\r\n                      <TableCell>{row.expire_date}</TableCell>\r\n                      \r\n                      \r\n\r\n                      <TableCell>\r\n                        {/* <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info mr-4\"\r\n                          onClick={() => UpdateCategoryData(row)}\r\n                        >\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </button> */}\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info\"\r\n                          onClick={() => deleteProduct(row)}\r\n                        >\r\n                          <i class=\"fa fa-trash\"></i>\r\n                        </button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                true\r\n                rowsPerPageOptions={false}\r\n                component=\"div\"\r\n                count={filterData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Card>\r\n\r\n          <br />\r\n          <Dialog\r\n            open={EditDailogOpen}\r\n            onClose={() => setEditDailogOpen(!EditDailogOpen)}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth=\"sm\"\r\n            fullWidth=\"fullWidth\"\r\n          >\r\n            <DialogTitle>\r\n              Add Category\r\n              <span className=\"float-right icon_color\"></span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div class=\"mb-3\">\r\n                <label for=\"formGroupExampleInput2\" class=\"form-label\"></label>\r\n                <div class=\" col-md-12\">\r\n                  <label for=\"inputPassword4\">Add Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Add Category\"\r\n                    value={EditcategoryName}\r\n                    onChange={(e) => {\r\n                      setEditcategoryName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              {/* <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => setEditDailogOpen(!EditDailogOpen)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => UpdateBrand(EditId)}\r\n              >\r\n                Upload\r\n              </Button> */}\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </>\r\n  );\r\n}\r\nexport default HOC(AddCoupon);\r\n","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\Resetpassword.jsx",["133"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Card, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Loder from \"../Loder/Loder\";\r\nimport { getBaseUrl } from \"../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../utils/Validation\";\r\n\r\n//import css\r\nimport \"./AdminLogin.css\";\r\n\r\nconst Resetpassword = (props) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  const [code, setcode] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [isloading, setisloading] = useState(false);\r\n  let email = props.location.state.email;\r\n\r\n  const changePassword = () => {\r\n    let url = getBaseUrl() + \"auth/verify-account\";\r\n    setisloading(true);\r\n\r\n    let temp = {\r\n      email,\r\n      code,\r\n      password,\r\n    };\r\n    axios\r\n      .post(url, temp)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisloading(false);\r\n          props.history.push(\"/home\");\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"admin_card\">\r\n        <h5 className=\"font_change ml-2 mb-4\">\r\n          <i class=\"fa fa-lock\"></i> Please enter your OTP.\r\n        </h5>\r\n        <Card className=\"card_shadow\">\r\n          <TextField\r\n            id=\"standard-password-input\"\r\n            className=\"email_field m-3\"\r\n            label=\"Email Id\"\r\n            type=\"text\"\r\n            autoComplete=\"Enter Email\"\r\n            value={email}\r\n          />\r\n          <TextField\r\n            id=\"standard-password-input\"\r\n            className=\"email_field m-3\"\r\n            label=\"Enter OTP\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={code}\r\n            onChange={(e) => {\r\n              setcode(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            id=\"standard-password-input\"\r\n            className=\"email_field m-3\"\r\n            label=\"Enter New Password\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={password}\r\n            onChange={(e) => {\r\n              setpassword(e.target.value);\r\n            }}\r\n          />\r\n          <br />\r\n\r\n          {/* <span className=\"forgot_pass ml-3\">Forgotten Password</span> */}\r\n          <br />\r\n          <span className=\"text-center mt-2\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"login_btn text-centre ml-2 mt-2 mb-3 mt-3\"\r\n              onClick={changePassword}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </span>\r\n        </Card>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resetpassword;\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCollection\\AddCollection.jsx",["134","135","136","137","138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\n//pagination\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction AddCollection(props) {\r\n    const [isupdated, setisupdated] = useState(false);\r\n    const [isloading, setisloading] = useState(false);\r\n    const [CollectionDataArry, setCollectionDataArry] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n\r\n        let url = getBaseUrl() + \"collection\";\r\n\r\n        axios\r\n            .get(url)\r\n            .then(\r\n                (res) => {\r\n                    console.log(\"data collection:::\", res);\r\n                    setCollectionDataArry(res.data.collections);\r\n                },\r\n\r\n                (error) => {\r\n                    setisloading(false);\r\n                    console.log(\"data response error:::\", error);\r\n                }\r\n            )\r\n            .catch((e) => {\r\n                setisloading(false);\r\n                console.log(\"data response error:::\", e);\r\n            });\r\n    }, [isupdated]);\r\n\r\n    \r\n     // for pagination hadler\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        window.scrollTo(0, 0);\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const [titlename, settitlename] = useState(\"\");\r\n    const filterData = CollectionDataArry.filter((event) => {\r\n        return (\r\n            event.name.toLowerCase().indexOf(titlename.toLowerCase()) !== -1\r\n        );\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"home_padding\">\r\n                <div className=\"content_padding\">\r\n                    <Grid className=\"Component_main_grid mb-3\">\r\n                        <Grid item md={9}>\r\n                            <h3 className=\"mb-2\">Add Collection</h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-info mr-4\"\r\n                                onClick={() => props.history.push(\"/createcollection\")}\r\n                            >\r\n                                <i class=\"fa fa-plus\"></i> Create\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-info mr-4\"\r\n                                onClick={() => props.history.goBack()}\r\n                            >\r\n                                <i class=\"fa fa-arrow-left\"></i>Go Back\r\n                            </button>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <div className=\"d-flex mt-3\">\r\n                                <span className=\"p-2\">\r\n                                    <i class=\"fa fa-search\"></i>\r\n                                </span>\r\n                                <span>\r\n                                    <input\r\n                                        value={titlename}\r\n                                        onChange={(e) => {\r\n                                            settitlename(e.target.value);\r\n                                        }}\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        placeholder=\"Search by Name\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Card classname=\"main_card p-3\">\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Image</TableCell>\r\n                                        <TableCell>Category</TableCell>\r\n                                        <TableCell>Description</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {(rowsPerPage > 0\r\n                                        ? filterData.slice(\r\n                                            page * rowsPerPage,\r\n                                            page * rowsPerPage + rowsPerPage\r\n                                        )\r\n                                        : filterData\r\n                                    ).map((row) => (\r\n                                        <TableRow key={row.name}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                <img\r\n                                                    src={row.image}\r\n                                                    style={{ height: \"30px\", width: \"50px\" }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>{row.name}</TableCell>\r\n                                            <TableCell>{row.description}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <TablePagination\r\n                                true\r\n                                rowsPerPageOptions={false}\r\n                                component=\"div\"\r\n                                count={filterData.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            />\r\n                        </TableContainer>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <Loder loading={isloading} />\r\n        </>\r\n    );\r\n}\r\nexport default HOC(AddCollection);\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\AddCategory\\AddCategory.jsx",["140","141","142","143"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\n//pagination\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\n//DIALOG BOX\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction AddCategory(props) {\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [isloading, setisloading] = useState(false);\r\n  const [CategoryDataArry, setCategoryDataArry] = useState([]);\r\n  const [EditDailogOpen, setEditDailogOpen] = useState(\"\");\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const [EditId, setEditId] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"category\";\r\n\r\n    axios\r\n      .get(url)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data viewCategory:::\", res);\r\n\r\n          setCategoryDataArry(res.data.categories);\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n      });\r\n  }, [isupdated]);\r\n\r\n  ///delete Category Name\r\n  const deleteCategory = (row) => {\r\n    let id = row._id;\r\n    setisloading(false);\r\n    let url = getBaseUrl() + `deleteCategory/${id}`;\r\n    axios\r\n      .delete(url)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisupdated(!isupdated);\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n          setisloading(false);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n          setisloading(false);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n        setisloading(false);\r\n      });\r\n  };\r\n\r\n  ///update Category Name\r\n  const UpdateBrand = (ID) => {\r\n    let id = ID;\r\n    setisloading(true);\r\n    let url = getBaseUrl() + `updateCategory/${id}`;\r\n    let temp = {\r\n      categoryName: EditcategoryName,\r\n    };\r\n\r\n    axios\r\n      .patch(url, temp)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data response:::\", res);\r\n          setisupdated(!isupdated);\r\n          showNotificationMsz(res.data.msg, \"success\");\r\n          setEditDailogOpen(!EditDailogOpen);\r\n          setisloading(false);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(\"data response error:::\", error);\r\n          showNotificationMsz(error, \"danger\");\r\n          setisloading(false);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        console.log(\"data response error:::\", e);\r\n        showNotificationMsz(e, \"danger\");\r\n        setisloading(false);\r\n      });\r\n  };\r\n\r\n  //paginaton\r\n\r\n  const UpdateCategoryData = (row) => {\r\n    setEditDailogOpen(!EditDailogOpen);\r\n    setEditcategoryName(row.categoryName);\r\n    setEditId(row._id);\r\n  };\r\n\r\n  // for pagination hadler\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    window.scrollTo(0, 0);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const [titlename, settitlename] = useState(\"\");\r\n\r\n  const filterData = CategoryDataArry.filter((event) => {\r\n    return (\r\n      event.name.toLowerCase().indexOf(titlename.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home_padding\">\r\n        <div className=\"content_padding\">\r\n          <Grid className=\"Component_main_grid mb-3\">\r\n            <Grid item md={9}>\r\n              <h3 className=\"mb-2\">Add category</h3>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.push(\"/createcategory\")}\r\n              >\r\n                <i class=\"fa fa-plus\"></i> Create\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.goBack()}\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>Go Back\r\n              </button>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div className=\"d-flex mt-3\">\r\n                <span className=\"p-2\">\r\n                  <i class=\"fa fa-search\"></i>\r\n                </span>\r\n                <span>\r\n                  <input\r\n                    value={titlename}\r\n                    onChange={(e) => {\r\n                      settitlename(e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Search by Name\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Card classname=\"main_card p-3\">\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Image</TableCell>\r\n                    <TableCell>Category</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Operations</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(rowsPerPage > 0\r\n                    ? filterData.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                    : filterData\r\n                  ).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                       <TableCell component=\"th\" scope=\"row\">\r\n                        <img\r\n                          src={ row.image}\r\n                          style={{ height: \"30px\", width: \"50px\" }}\r\n                        />\r\n                        </TableCell>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>{row.description}</TableCell>\r\n                      \r\n\r\n                      <TableCell>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info mr-4\"\r\n                          onClick={() => UpdateCategoryData(row)}\r\n                        >\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info\"\r\n                          onClick={() => deleteCategory(row)}\r\n                        >\r\n                          <i class=\"fa fa-trash\"></i>\r\n                        </button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                true\r\n                rowsPerPageOptions={false}\r\n                component=\"div\"\r\n                count={filterData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Card>\r\n\r\n          <br />\r\n          <Dialog\r\n            open={EditDailogOpen}\r\n            onClose={() => setEditDailogOpen(!EditDailogOpen)}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth=\"sm\"\r\n            fullWidth=\"fullWidth\"\r\n          >\r\n            <DialogTitle>\r\n              Add Category\r\n              <span className=\"float-right icon_color\"></span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div class=\"mb-3\">\r\n                <label for=\"formGroupExampleInput2\" class=\"form-label\"></label>\r\n                <div class=\" col-md-12\">\r\n                  <label for=\"inputPassword4\">Add Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Add Category\"\r\n                    value={EditcategoryName}\r\n                    onChange={(e) => {\r\n                      setEditcategoryName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => setEditDailogOpen(!EditDailogOpen)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => UpdateBrand(EditId)}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </>\r\n  );\r\n}\r\nexport default HOC(AddCategory);\r\n","D:\\react-projects\\adminReact\\src\\Components\\AdminLogin\\AdminLogin.jsx",[],"D:\\react-projects\\adminReact\\src\\Components\\Pages\\Coupon\\CreateCoupon.jsx",["144","145","146","147"],"import React, { useEffect, useState } from \"react\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\nconst Createcoupon = (props) => {\r\n    const [isloading, setisloading] = useState(false);\r\n    const [discount, setdiscount] = useState(\"\");\r\n    const [expiry, setExpiry] = useState(\"\");\r\n    const [collection, setCollection] = useState();\r\n    //error\r\n    const [EditDiscount, setEditDiscount] = useState(false);\r\n    const [EditExpiry, setEditExpiry] = useState(false);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n  \r\n    //add Coupon\r\n\r\n    const addCoupon = () => {\r\n        try {\r\n            if (!blankValidator(discount)) {\r\n                setEditDiscount(true);\r\n                return;\r\n            }\r\n\r\n            if (!blankValidator(expiry)) {\r\n                setEditExpiry(true);\r\n                return;\r\n            }\r\n\r\n            let url = getBaseUrl() + \"coupon\";\r\n            setisloading(true);\r\n\r\n           const temp ={\r\n            discount_percentage:discount,\r\n            expire_date:expiry\r\n           }\r\n\r\n            const config = {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            };\r\n\r\n            axios\r\n                .post(url, temp, config)\r\n                .then(\r\n                    (res) => {\r\n                        console.log(\"data Category:::\", res);\r\n                        setisloading(false);\r\n                        showNotificationMsz(res.data.msg, \"success\");\r\n                    },\r\n\r\n                    (error) => {\r\n                        setisloading(false);\r\n                        console.log(\"data response error:::\", error);\r\n                        showNotificationMsz(error, \"danger\");\r\n                    }\r\n                )\r\n                .catch((e) => {\r\n                    setisloading(false);\r\n                    console.log(\"data response error:::\", e);\r\n                    showNotificationMsz(e, \"danger\");\r\n                });\r\n        } catch (error) { }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ width: \"100%\" }}>\r\n                <div className=\"home_padding\">\r\n                    <div className=\"content_padding\">\r\n                        <Grid className=\"Component_main_grid p-2 \"></Grid>\r\n\r\n                        <div>\r\n                            <Card className=\" mb-2 Card_shadow p-3\">\r\n                                <div className=\"card_admissiondetails_height\">\r\n                                    <div className=\"textfiled_margin\">\r\n                                        <div className=\"card_content_instition\">\r\n                                            <h5 className=\"text_filed_heading\">Add Coupon</h5>\r\n\r\n                                            <Grid className=\"Component_main_grid\">\r\n                                                <Grid item md={12}>\r\n                                                    <div className=\"text_filed_heading\">Discount Percentage</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Name\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={discount}\r\n                                                            onChange={(e) => {\r\n                                                                setEditDiscount(false);\r\n                                                                setdiscount(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        {EditDiscount && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Enter Discount\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"text_filed_heading\">expiry Date</div>\r\n                                                    <div className=\" mt-1 mr-2\">\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            className=\"form-control \"\r\n                                                            placeholder=\"Enter Price\"\r\n                                                            autoComplete=\"off\"\r\n                                                            value={expiry}\r\n                                                            onChange={(e) => {\r\n                                                                setEditExpiry(false);\r\n                                                                setExpiry(e.target.value);\r\n                                                            }}\r\n                                                        />\r\n                                                        {EditExpiry && (\r\n                                                            <span className=\"text-danger\">\r\n                                                                Enter Expiry Date\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                   \r\n\r\n                                            \r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <div className=\"mt-2 pb-3 \">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                className=\"button_formatting\"\r\n                                                onClick={addCoupon}\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HOC(Createcoupon);\r\n","D:\\react-projects\\adminReact\\src\\Components\\Pages\\User\\index.jsx",["148","149","150","151","152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HOC from \"../../../Common/Hoc\";\r\nimport { Card, Grid, Button } from \"@material-ui/core\";\r\n//pagination\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Loder from \"../../Loder/Loder\";\r\nimport { getBaseUrl } from \"../../utils\";\r\nimport { blankValidator, showNotificationMsz } from \"../../utils/Validation\";\r\nimport axios from \"axios\";\r\n\r\n//DIALOG BOX\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction User(props) {\r\n  const [isupdated, setisupdated] = useState(false);\r\n  const [isloading, setisloading] = useState(false);\r\n  const [AddressDataArry, setAddressDataArry] = useState([]);\r\n  const [EditDailogOpen, setEditDailogOpen] = useState(\"\");\r\n  const [EditcategoryName, setEditcategoryName] = useState(false);\r\n  const [EditId, setEditId] = useState(\"\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    let url = getBaseUrl() + \"address/all\";\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n\r\n    axios\r\n      .get(url,config)\r\n      .then(\r\n        (res) => {\r\n          console.log(\"data Adress:::\", res);\r\n          setAddressDataArry(res.data.addresses);\r\n        },\r\n\r\n        (error) => {\r\n          setisloading(false);\r\n          console.log(\"data response error:::\", error);\r\n        }\r\n      )\r\n      .catch((e) => {\r\n        setisloading(false);\r\n        console.log(\"data response error:::\", e);\r\n      });\r\n  }, [isupdated]);\r\n\r\n \r\n \r\n\r\n \r\n  // for pagination hadler\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    window.scrollTo(0, 0);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const [first_name, setfirst_name] = useState(\"\");\r\n\r\n  const filterData = AddressDataArry.filter((event) => {\r\n    return (\r\n      event.first_name.toLowerCase().indexOf(first_name.toLowerCase()) !== -1\r\n    );\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home_padding\">\r\n        <div className=\"content_padding\">\r\n          <Grid className=\"Component_main_grid mb-3\">\r\n            <Grid item md={9}>\r\n              <h3 className=\"mb-2\">Address User</h3>\r\n              {/* <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.push(\"/createCategory\")}\r\n              >\r\n                <i class=\"fa fa-plus\"></i> Create\r\n              </button> */}\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info mr-4\"\r\n                onClick={() => props.history.goBack()}\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>Go Back\r\n              </button>\r\n            </Grid>\r\n            <Grid item md={3}>\r\n              <div className=\"d-flex mt-3\">\r\n                <span className=\"p-2\">\r\n                  <i class=\"fa fa-search\"></i>\r\n                </span>\r\n                <span>\r\n                  <input\r\n                    value={first_name}\r\n                    onChange={(e) => {\r\n                      setfirst_name(e.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Search by Name\"\r\n                  />\r\n                </span>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Card classname=\"main_card p-3\">\r\n            <TableContainer>\r\n              <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                    <TableCell>Province</TableCell>\r\n                    <TableCell>Country</TableCell>\r\n                    <TableCell>City</TableCell>\r\n                    <TableCell>Phone</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {(rowsPerPage > 0\r\n                    ? filterData.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                    : filterData\r\n                  ).map((row) => (\r\n                    <TableRow key={row.name}>\r\n                      <TableCell>{row.first_name}</TableCell>\r\n                      <TableCell>{row.city}</TableCell>\r\n                      <TableCell>{row.country}</TableCell>\r\n                      <TableCell>{row.province}</TableCell>\r\n                      <TableCell>{row.country_code+row.phone_number}</TableCell>\r\n\r\n                      {/* <TableCell>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info mr-4\"\r\n                          onClick={() => UpdateCategoryData(row)}\r\n                        >\r\n                          <i class=\"fa fa-edit\"></i>\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info\"\r\n                          onClick={() => deleteCategory(row)}\r\n                        >\r\n                          <i class=\"fa fa-trash\"></i>\r\n                        </button>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                true\r\n                rowsPerPageOptions={false}\r\n                component=\"div\"\r\n                count={filterData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableContainer>\r\n          </Card>\r\n\r\n          <br />\r\n          <Dialog\r\n            open={EditDailogOpen}\r\n            onClose={() => setEditDailogOpen(!EditDailogOpen)}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            maxWidth=\"sm\"\r\n            fullWidth=\"fullWidth\"\r\n          >\r\n            <DialogTitle>\r\n              Add Category\r\n              <span className=\"float-right icon_color\"></span>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <div class=\"mb-3\">\r\n                <label for=\"formGroupExampleInput2\" class=\"form-label\"></label>\r\n                <div class=\" col-md-12\">\r\n                  <label for=\"inputPassword4\">Add Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Add Category\"\r\n                    value={EditcategoryName}\r\n                    onChange={(e) => {\r\n                      setEditcategoryName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => setEditDailogOpen(!EditDailogOpen)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              {/* <Button\r\n                className=\"button_formatting\"\r\n                onClick={() => UpdateBrand(EditId)}\r\n              >\r\n                Upload\r\n              </Button> */}\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n      <Loder loading={isloading} />\r\n    </>\r\n  );\r\n}\r\nexport default HOC(User);\r\n","D:\\react-projects\\adminReact\\src\\Components\\utils\\Validation.jsx",["155","156"],"import { store } from \"react-notifications-component\";\r\n\r\n// to test only the string in blank or undefined\r\nexport const blankValidator = (str) => {\r\n  if (str === \"\" || str === undefined || str === null) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n//for email Validation\r\nexport const emailValidator = (email) => {\r\n  const regEx =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  if (!email.match(regEx)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n// show notification msz\r\nexport const showNotificationMsz = (message, messageType) => {\r\n  store.addNotification({\r\n    title: \"\",\r\n    message: `${message}`,\r\n    type: `${messageType}`,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    dismiss: {\r\n      duration: 3000,\r\n      onScreen: true,\r\n    },\r\n  });\r\n};\r\n","D:\\react-projects\\adminReact\\src\\Components\\Loder\\Loder.jsx",[],"D:\\react-projects\\adminReact\\src\\Common\\Hoc.jsx",[],"D:\\react-projects\\adminReact\\src\\Components\\utils\\index.jsx",[],"D:\\react-projects\\adminReact\\src\\Common\\Header\\Header.jsx",["157","158"],"import React, { useState } from \"react\";\r\n\r\n//material ui appbar\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\n//css file\r\nimport \"./Header.css\";\r\n\r\n//import image\r\nimport { height, width } from \"@mui/system\";\r\n\r\n//import image\r\n\r\nconst Header = (props) => {\r\n  /*local state */\r\n  const [Sidebar, setSidebar] = useState(false);\r\n\r\n  /*function to open a sidebar */\r\n  const setLoadingnewside = () => {\r\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n    setSidebar(true);\r\n  };\r\n\r\n  /*function to close a sidebar */\r\n  const Closesidebar = () => {\r\n    document.getElementById(\"mySidenav\").style.width = \"0px\";\r\n    setSidebar(false);\r\n  };\r\n  return (\r\n    <div className=\"topheader\">\r\n      <AppBar position=\"fixed\" className=\"MainHeader\">\r\n        <Toolbar className=\"header_padding\">\r\n          <div className=\"header_link_color\">\r\n          <h3><span className=\"logo_img\">LOGO</span></h3> \r\n            {/* <img src={Logo} style={{ height: \"70px\", width: \"150px\" }} /> */}\r\n          </div>\r\n          <div className=\"header_grow\" />\r\n          <div className=\"header_links\">\r\n            <span\r\n              className=\"header_link_color\"\r\n              onClick={() => props.history.push(\"/home\")}\r\n            >\r\n              Home\r\n            </span>\r\n            <span\r\n              className=\"logout_Pointer_cursor\"\r\n              onClick={() => props.history.push(\"/\")}\r\n            >\r\n              Logout\r\n            </span>\r\n\r\n            {/* <span\r\n              className=\"header_link_color\"\r\n              onClick={() => props.history.push(\"#\")}\r\n            >\r\n              Create Crew\r\n            </span>\r\n\r\n            <span\r\n              className=\"header_link_color\"\r\n              onClick={() => props.history.push(\"#\")}\r\n            >\r\n              Login\r\n            </span> */}\r\n          </div>\r\n          <div className=\"mobile_Burger_Menu\">\r\n            <span\r\n              className=\"logout_Pointer_cursor mr-3 text-right mt-2\"\r\n              onClick={!Sidebar ? setLoadingnewside : Closesidebar}\r\n            >\r\n              <i class=\"fa fa-bars\"></i>\r\n            </span>\r\n\r\n            <div id=\"mySidenav\" className=\"sidenav\">\r\n              <div className=\"cross_icon_style\">\r\n                <i\r\n                  class=\"fa fa-times cursor\"\r\n                  onClick={() => {\r\n                    document.getElementById(\"mySidenav\").style.width = \"0px\";\r\n                    setSidebar(false);\r\n                  }}\r\n                ></i>\r\n              </div>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/home\")}\r\n              >\r\n                Dashboard\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/brand-list\")}\r\n              >\r\n                Add Car Brands\r\n              </span>\r\n\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/addProduct\")}\r\n              >\r\n                Add Products\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/addCategory\")}\r\n              >\r\n                Add Category\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/addblog\")}\r\n              >\r\n                Add Blog\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/bannerList\")}\r\n              >\r\n                Add Banner\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/QualityList\")}\r\n              >\r\n                Add Quality\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/logoList\")}\r\n              >\r\n                Add Logo\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/orders\")}\r\n              >\r\n                Orders\r\n              </span>\r\n\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/customers\")}\r\n              >\r\n                Customers\r\n              </span>\r\n\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/Exhaust\")}\r\n              >\r\n                Add Exhaust\r\n              </span>\r\n\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"/productupload\")}\r\n              >\r\n                Add Ptoduct Bulk\r\n              </span>\r\n              {/* <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"#\")}\r\n              >\r\n                Contact\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"#\")}\r\n              >\r\n                Company\r\n              </span>\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"#\")}\r\n              >\r\n                Trip\r\n              </span>\r\n\r\n              <span\r\n                className=\"logout_Pointer_cursor\"\r\n                onClick={() => props.history.push(\"#\")}\r\n              >\r\n                Login\r\n              </span> */}\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\react-projects\\adminReact\\src\\Components\\Sidebar\\Sidebar.jsx",["159"],"import React from \"react\";\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\n\r\nconst Sidebar = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"proslider_mobile prosideclass\">\r\n        <ProSidebar>\r\n          <Menu iconShape=\"square\">\r\n            <MenuItem>a</MenuItem>\r\n            <MenuItem onClick={() => props.history.push(\"/home\")}>\r\n              Dashboard\r\n            </MenuItem>\r\n            <MenuItem onClick={() => props.history.push(\"/user\")}>\r\n             User\r\n            </MenuItem>\r\n            <MenuItem onClick={() => props.history.push(\"/category\")}>\r\n             Category\r\n            </MenuItem>\r\n            <MenuItem onClick={() => props.history.push(\"/collection\")}>\r\n            Collection\r\n            </MenuItem>\r\n           \r\n            <MenuItem onClick={() => props.history.push(\"/addproduct\")}>\r\n            Product\r\n            </MenuItem>\r\n            <MenuItem onClick={() => props.history.push(\"/coupon\")}>\r\n             Coupoun\r\n            </MenuItem>\r\n            \r\n          </Menu>\r\n        </ProSidebar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":25,"nodeType":"166","messageId":"167","endLine":1,"endColumn":33},{"ruleId":"164","severity":1,"message":"168","line":13,"column":8,"nodeType":"166","messageId":"167","endLine":13,"endColumn":22},{"ruleId":"164","severity":1,"message":"169","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"170","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":21},{"ruleId":"164","severity":1,"message":"171","line":11,"column":23,"nodeType":"166","messageId":"167","endLine":11,"endColumn":35},{"ruleId":"164","severity":1,"message":"172","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"173","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"174","line":38,"column":10,"nodeType":"166","messageId":"167","endLine":38,"endColumn":26},{"ruleId":"164","severity":1,"message":"175","line":38,"column":28,"nodeType":"166","messageId":"167","endLine":38,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":282,"column":25,"nodeType":"178","endLine":285,"endColumn":27},{"ruleId":"164","severity":1,"message":"179","line":4,"column":16,"nodeType":"166","messageId":"167","endLine":4,"endColumn":20},{"ruleId":"164","severity":1,"message":"169","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"170","line":10,"column":10,"nodeType":"166","messageId":"167","endLine":10,"endColumn":19},{"ruleId":"164","severity":1,"message":"180","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":19},{"ruleId":"164","severity":1,"message":"171","line":11,"column":21,"nodeType":"166","messageId":"167","endLine":11,"endColumn":33},{"ruleId":"164","severity":1,"message":"171","line":11,"column":21,"nodeType":"166","messageId":"167","endLine":11,"endColumn":33},{"ruleId":"164","severity":1,"message":"181","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":15},{"ruleId":"164","severity":1,"message":"173","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":24},{"ruleId":"164","severity":1,"message":"172","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"182","line":11,"column":22,"nodeType":"166","messageId":"167","endLine":11,"endColumn":28},{"ruleId":"164","severity":1,"message":"173","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"183","line":39,"column":10,"nodeType":"166","messageId":"167","endLine":39,"endColumn":16},{"ruleId":"164","severity":1,"message":"184","line":39,"column":18,"nodeType":"166","messageId":"167","endLine":39,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":68,"column":6,"nodeType":"187","endLine":68,"endColumn":17,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"173","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":24},{"ruleId":"164","severity":1,"message":"172","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"182","line":11,"column":22,"nodeType":"166","messageId":"167","endLine":11,"endColumn":28},{"ruleId":"164","severity":1,"message":"173","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"189","line":16,"column":26,"nodeType":"166","messageId":"167","endLine":16,"endColumn":45},{"ruleId":"164","severity":1,"message":"171","line":26,"column":23,"nodeType":"166","messageId":"167","endLine":26,"endColumn":35},{"ruleId":"176","severity":1,"message":"177","line":141,"column":49,"nodeType":"178","endLine":144,"endColumn":51},{"ruleId":"164","severity":1,"message":"172","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"173","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"190","line":40,"column":9,"nodeType":"166","messageId":"167","endLine":40,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":222,"column":25,"nodeType":"178","endLine":225,"endColumn":27},{"ruleId":"164","severity":1,"message":"169","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":13},{"ruleId":"164","severity":1,"message":"170","line":10,"column":12,"nodeType":"166","messageId":"167","endLine":10,"endColumn":21},{"ruleId":"164","severity":1,"message":"191","line":13,"column":12,"nodeType":"166","messageId":"167","endLine":13,"endColumn":22},{"ruleId":"164","severity":1,"message":"192","line":13,"column":24,"nodeType":"166","messageId":"167","endLine":13,"endColumn":37},{"ruleId":"164","severity":1,"message":"172","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"173","line":16,"column":10,"nodeType":"166","messageId":"167","endLine":16,"endColumn":24},{"ruleId":"164","severity":1,"message":"189","line":16,"column":26,"nodeType":"166","messageId":"167","endLine":16,"endColumn":45},{"ruleId":"164","severity":1,"message":"171","line":34,"column":21,"nodeType":"166","messageId":"167","endLine":34,"endColumn":33},{"ruleId":"164","severity":1,"message":"183","line":39,"column":10,"nodeType":"166","messageId":"167","endLine":39,"endColumn":16},{"ruleId":"164","severity":1,"message":"184","line":39,"column":18,"nodeType":"166","messageId":"167","endLine":39,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":67,"column":6,"nodeType":"187","endLine":67,"endColumn":17,"suggestions":"193"},{"ruleId":"194","severity":1,"message":"195","line":14,"column":15,"nodeType":"196","messageId":"197","endLine":14,"endColumn":16,"suggestions":"198"},{"ruleId":"194","severity":1,"message":"195","line":14,"column":40,"nodeType":"196","messageId":"197","endLine":14,"endColumn":41,"suggestions":"199"},{"ruleId":"164","severity":1,"message":"200","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":16},{"ruleId":"164","severity":1,"message":"201","line":11,"column":18,"nodeType":"166","messageId":"167","endLine":11,"endColumn":23},{"ruleId":"164","severity":1,"message":"202","line":2,"column":38,"nodeType":"166","messageId":"167","endLine":2,"endColumn":45},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'ProtectedRoute' is defined but never used.","'Loder' is defined but never used.","'isloading' is assigned a value but never used.","'setisupdated' is assigned a value but never used.","'Paper' is defined but never used.","'blankValidator' is defined but never used.","'EditcategoryName' is assigned a value but never used.","'setEditcategoryName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","'isupdated' is assigned a value but never used.","'image' is assigned a value but never used.","'Button' is defined but never used.","'EditId' is assigned a value but never used.","'setEditId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'showNotificationMsz' is defined but never used.","'token' is assigned a value but never used.","'collection' is assigned a value but never used.","'setCollection' is assigned a value but never used.",["206"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["207","208"],["209","210"],"'height' is defined but never used.","'width' is defined but never used.","'SubMenu' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"messageId":"214","fix":"215","desc":"216"},{"messageId":"217","fix":"218","desc":"219"},{"messageId":"214","fix":"220","desc":"216"},{"messageId":"217","fix":"221","desc":"219"},"Update the dependencies array to be: [isupdated, token]",{"range":"222","text":"223"},{"range":"224","text":"223"},"removeEscape",{"range":"225","text":"226"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"227","text":"228"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"229","text":"226"},{"range":"230","text":"228"},[2141,2152],"[isupdated, token]",[2073,2084],[353,354],"",[353,353],"\\",[378,379],[378,378]]